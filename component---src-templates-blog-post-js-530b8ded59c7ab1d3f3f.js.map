{"version":3,"sources":["webpack:///./src/templates/blogPost.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","BlogWrapper","styled","div","withConfig","displayName","componentId","BlogHeader","h2","BlogPost","Links","PostLink","Link","Template","_ref","data","pageContext","next","prev","markdownRemark","title","frontmatter","html","a","createElement","className","dangerouslySetInnerHTML","__html","to","path","m","module","exports","require","default","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAIMU,EAAcC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,sCAKXK,EAAaL,IAAOM,GAAVJ,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,wBAIVO,EAAWP,IAAOC,IAAVC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,2EAURQ,EAAQR,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,mBAILS,EAAWT,YAAOU,QAAVR,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,0EAuCDP,EAAK,aAWHkB,UAzCE,SAAAC,GAAyB,IAAvBC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,YACfC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KAENC,EAAmBJ,EAAnBI,eACFC,EAAQD,EAAeE,YAAYD,MACnCE,EAAOH,EAAeG,KAE5B,OACEzB,EAAA0B,EAAAC,cAACvB,EAAD,KACEJ,EAAA0B,EAAAC,cAACjB,EAAD,KAAaa,GACbvB,EAAA0B,EAAAC,cAACf,EAAD,CACEgB,UAAU,WACVC,wBAAyB,CAACC,OAAQL,KAEpCzB,EAAA0B,EAAAC,cAACd,EAAD,KACGO,GACCpB,EAAA0B,EAAAC,cAACb,EAAD,CAAUiB,GAAE,SAAWX,EAAKI,YAAYQ,MAAxC,QAIDX,GACCrB,EAAA0B,EAAAC,cAACb,EAAD,CAAUiB,GAAE,SAAWV,EAAKG,YAAYQ,MAAxC,oCCzDV,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CvC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAA0C,IAAA5C,EAAAG,EAAAD,EAAA,uCAAA2C,IAAA7C,EAAAG,EAAAD,EAAA,gCAAA4C,IAAA,IAAAzC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAA0C,EAAA/C,EAAA,GAAAgD,EAAAhD,EAAAO,EAAAwC,GAAAE,EAAAjD,EAAA,KAAAkD,EAAAlD,EAAAO,EAAA0C,GAAAjD,EAAAG,EAAAD,EAAA,yBAAAgD,EAAAlB,IAAAhC,EAAAG,EAAAD,EAAA,+BAAA+C,EAAA,aAAAjD,EAAAG,EAAAD,EAAA,6BAAA+C,EAAA,WAAAjD,EAAAG,EAAAD,EAAA,yBAAA+C,EAAA,OAAAjD,EAAAG,EAAAD,EAAA,4BAAA+C,EAAA,UAAAjD,EAAAG,EAAAD,EAAA,+BAAA+C,EAAA,iBAAAE,EAAAnD,EAAA,KAAAoD,EAAApD,EAAAO,EAAA4C,GAAAnD,EAAAG,EAAAD,EAAA,iCAAAkD,EAAApB,IAAA,IAAAqB,EAAArD,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAmD,EAAA,IAYA,IAAMR,EAAqBS,IAAMC,cAAc,IAEzCT,EAAc,SAAAU,GAAK,OACvBlD,EAAA0B,EAAAC,cAACY,EAAmBY,SAApB,KACG,SAAAC,GACC,OACEF,EAAMhC,MACLkC,EAAgBF,EAAMpD,QAAUsD,EAAgBF,EAAMpD,OAAOoB,MAEtDgC,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAMhC,KAAOgC,EAAMhC,KAAKA,KAAOkC,EAAgBF,EAAMpD,OAAOoB,MAGvDlB,EAAA0B,EAAAC,cAAA,uCAaf,SAASW,IACP,MAAM,IAAIiB,MACR,gVATJf,EAAYgB,UAAY,CACtBtC,KAAMuC,IAAUC,OAChB5D,MAAO2D,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,wGC7BhBC,EAAmB,SAAA7C,GAAkB,IAAf8C,EAAe9C,EAAf8C,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOnB,IAAMrB,cAAcyC,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBN,UAAY,CAC3BO,SAAUN,IAAUe,MAAM,CACxBL,SAAUV,IAAUE,OAAOC,aAC1BA,YAGUE","file":"component---src-templates-blog-post-js-530b8ded59c7ab1d3f3f.js","sourcesContent":["import React from 'react'; \r\nimport { graphql, Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\n\r\nconst BlogWrapper = styled.div`\r\n  padding: 0 30px;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst BlogHeader = styled.h2`\r\n  text-align: center;\r\n`;\r\n\r\nconst BlogPost = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  img {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst Links = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst PostLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #c701c0;\r\n\r\n  &:first-child {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst Template = ({data, pageContext}) => {\r\n  const { next, prev } = pageContext;\r\n  \r\n  const { markdownRemark } = data;\r\n  const title = markdownRemark.frontmatter.title;\r\n  const html = markdownRemark.html;\r\n  \r\n  return (\r\n    <BlogWrapper>\r\n      <BlogHeader>{title}</BlogHeader>\r\n      <BlogPost\r\n        className=\"blogpost\"\r\n        dangerouslySetInnerHTML={{__html: html}}\r\n      />\r\n      <Links>\r\n        {next &&\r\n          <PostLink to={`pages/${next.frontmatter.path}`}>\r\n            Next\r\n          </PostLink>\r\n        }\r\n        {prev &&\r\n          <PostLink to={`pages/${prev.frontmatter.path}`}>\r\n            Previous\r\n          </PostLink>\r\n        }\r\n      </Links>\r\n    </BlogWrapper>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query($pagePath: String!) {\r\n    markdownRemark (frontmatter: {path: {eq: $pagePath}}) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Template;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}